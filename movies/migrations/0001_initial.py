# Generated by Django 5.0.4 on 2024-08-14 21:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Enter a unique name for the genre.', max_length=100, unique=True)),
                ('tmdb_id', models.IntegerField(db_index=True, help_text='The associated TMDB ID for the genre.', null=True, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly identifier automatically generated from the name.', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imdb_id', models.CharField(blank=True, db_index=True, help_text='IMDB identifier for the movie.', max_length=20, null=True, unique=True)),
                ('tmdb_id', models.IntegerField(blank=True, db_index=True, help_text='TMDB identifier for the movie.', null=True, unique=True)),
                ('title', models.CharField(db_index=True, help_text='The title of the movie.', max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly identifier automatically generated from the title.', max_length=255, unique=True)),
                ('overview', models.TextField(blank=True, help_text='Brief description of the movie.', null=True)),
                ('release_date', models.DateField(blank=True, db_index=True, help_text='The release date of the movie.', null=True)),
                ('cast', models.TextField(blank=True, help_text='List of main cast members.', null=True)),
                ('language', models.CharField(blank=True, help_text='The primary language of the movie.', max_length=100)),
                ('poster_url', models.URLField(blank=True, db_index=True, help_text="URL to the movie's poster image.", null=True)),
                ('trailer_url', models.URLField(blank=True, help_text="URL to the movie's trailer.", null=True)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Calculated average rating based on user reviews.', max_digits=4)),
                ('genres', models.ManyToManyField(help_text='Genres associated with this movie.', related_name='movies', to='movies.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(help_text="User's comment about the movie.")),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watched', models.BooleanField(default=False, help_text='Whether the user has watched the movie.')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlisted_by', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='watchlist',
            constraint=models.UniqueConstraint(fields=('user', 'movie'), name='unique_user_movie_watchlist'),
        ),
    ]
